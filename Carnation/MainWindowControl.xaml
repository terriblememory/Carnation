<UserControl x:Class="Carnation.MainWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:vsui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:local="clr-namespace:Carnation"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
             Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             Name="MyToolWindow"
             Resources="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogDefaultStylesKey}}">

    <Grid Background="{DynamicResource {x:Static vsshell:VsBrushes.CommandShelfBackgroundGradientKey}}">
        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="VSThemedControlStyles.xaml" />
                </ResourceDictionary.MergedDictionaries>
                <local:ValueIsSetVisibilityConverter x:Key="ValueIsSetVisibilityConverter" />
                <local:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                <local:BoolToFontWeightConverter x:Key="BoolToFontWeightConverter" />
                <local:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
                <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
                <sys:Double x:Key="ColorSelectorWidth">30</sys:Double>

                <DataTemplate DataType="{x:Type Color}" x:Key="ColorSelectorItemTemplate">
                    <TextBlock Background="{Binding Path=., Converter={StaticResource ColorToBrushConverter}}" Width="{StaticResource ResourceKey=ColorSelectorWidth}" />
                </DataTemplate>

            </ResourceDictionary>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Toolbar -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <DockPanel Grid.Column="0">
                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" HorizontalAlignment="Left" Margin="4 4 0 4">
                    <Button Click="DropDownButton_Click" ContextMenuOpening="DropDownButton_ContextMenuOpening">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Themes" />
                                <Path Fill="{DynamicResource {x:Static vsui:EnvironmentColors.CommandBarMenuGlyphBrushKey}}"
                                    Margin="4 0 0 0"
                                    VerticalAlignment="Center"
                                    Data="M 0 0 L 3 3 L 6 0 Z"/>
                            </StackPanel>
                        </Button.Content>
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Import" Command="{Binding ImportThemeCommand}" />
                                <MenuItem Header="Export" Command="{Binding ExportThemeCommand}" />
                                <MenuItem Header="Reset Theme To Defaults" Command="{Binding ResetAllToDefaultsCommand}" />
                                <Separator />
                                <MenuItem Header="Monokai" Command="{Binding LoadThemeCommand}" CommandParameter="monokai"/>
                                <MenuItem Header="Monokai Pro" Command="{Binding LoadThemeCommand}" CommandParameter="monokai-pro"/>
                                <MenuItem Header="Solarized Light" Command="{Binding LoadThemeCommand}" CommandParameter="solarized-light"/>
                                <MenuItem Header="Solarized Dark" Command="{Binding LoadThemeCommand}" CommandParameter="solarized-dark"/>
                                <MenuItem Header="Tomorrow Light" Command="{Binding LoadThemeCommand}" CommandParameter="tomorrow-light"/>
                                <MenuItem Header="Tomorrow Night Blue" Command="{Binding LoadThemeCommand}" CommandParameter="tomorrow-night-blue"/>
                                <MenuItem Header="WekeRoad Ink" Command="{Binding LoadThemeCommand}" CommandParameter="wekeroad-ink"/>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Button Margin="4 0 0 0" Click="DropDownButton_Click" ContextMenuOpening="DropDownButton_ContextMenuOpening">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Suggestions" />
                                <Path Fill="{DynamicResource {x:Static vsui:EnvironmentColors.CommandBarMenuGlyphBrushKey}}"
                                    Margin="4 0 0 0"
                                    VerticalAlignment="Center"
                                    Data="M 0 0 L 3 3 L 6 0 Z"/>
                            </StackPanel>
                        </Button.Content>
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Use Extra Contrast Suggestion" IsCheckable="True" IsChecked="{Binding UseExtraContrastSuggestions}" />
                                <Separator />
                                <MenuItem Header="Apply All Foreground Suggestions" Command="{Binding UseAllForegroundSuggestionsCommand}" ToolTip="Sets all Foreground colors to the nearest with AA contrast against the Background." />
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <!--
                        <Button Content="Undo" Margin="4 4 0 0" />
                        <Button Content="Redo" Margin="4 4 0 0" />
                    -->
                </StackPanel>
            </DockPanel>

            <ComboBox x:Name="SearchBox" Grid.Column="1" Margin="4 4 0 4" IsEditable="True" Text="{Binding SearchText}" ItemsSource="{Binding ClassificationGridView}" />
            <TextBlock Grid.Column="1" Margin="8"
               Foreground="{DynamicResource {x:Static vsshell:VsBrushes.GrayTextKey}}"
               Visibility="{Binding Text, ElementName=SearchBox, Converter={StaticResource NullToVisibilityConverter}}"
               IsHitTestVisible="False"
               Text="Search Classifications" />

            <ToggleButton x:Name="TrackCursor" Margin="4" Grid.Column="21" Content="Follow Cursor" IsChecked="{Binding FollowCursorSelected}" />
        </Grid>

        <!-- Classifications Grid -->
        <DataGrid Grid.Row="1"
                  x:Name="ClassificationsGrid"
                  AutoGenerateColumns="False"
                  SelectionMode="Single"
                  ItemsSource="{Binding ClassificationGridItems}"
                  SelectedItem="{Binding SelectedClassification}">
            <DataGrid.Columns>
                <DataGridTextColumn
                    Header="Display Items"
                    IsReadOnly="True"
                    Binding="{Binding DefinitionName}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="4 0 0 0" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTemplateColumn Header="Foreground">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content=""
                                Visibility="{Binding IsForegroundEditable, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                                Background="{Binding Foreground, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}"
                                Command="{Binding ElementName=MyToolWindow, Path=DataContext.EditForegroundCommand}"
                                CommandParameter="{Binding Path=.}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Background">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content=""
                                Visibility="{Binding IsBackgroundEditable, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                                Background="{Binding Background, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}"
                                Command="{Binding ElementName=MyToolWindow, Path=DataContext.EditBackgroundCommand}"
                                CommandParameter="{Binding Path=.}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Bold">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsBold, Mode=OneWay}"
                                      IsEnabled="{Binding IsBoldEditable, Mode=OneWay}"
                                      Command="{Binding ElementName=MyToolWindow, Path=DataContext.ToggleIsBoldCommand}"
                                      CommandParameter="{Binding Path=.}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Sample">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid Background="{Binding Background, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}">
                                <TextBlock Text="{Binding Sample}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           Padding="8, 0"
                                           Foreground="{Binding Foreground, Converter={StaticResource ColorToBrushConverter}, Mode=OneWay}"
                                           FontFamily="{Binding ElementName=MyToolWindow, Path=DataContext.FontFamily, Mode=OneWay}"
                                           FontSize="{Binding ElementName=MyToolWindow, Path=DataContext.FontSize, Mode=OneWay}"
                                           FontWeight="{Binding ElementName=MyToolWindow, Path=DataContext.IsBold, Converter={StaticResource BoolToFontWeightConverter}, Mode=OneWay}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn
                    Header="Contrast"
                    IsReadOnly="True"
                    Binding="{Binding ContrastRatio, StringFormat=\{0:N2\}}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn
                    Header="Rating"
                    IsReadOnly="True"
                    Binding="{Binding ContrastRating}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTemplateColumn Header="Commands">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="Apply Foreground Suggestion"
                                    Visibility="{Binding HasContrastWarning, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                                    ToolTip="Sets the Foreground color to the nearest with AA contrast against the Background."
                                    Command="{Binding ElementName=MyToolWindow, Path=DataContext.UseForegroundSuggestionCommand}"
                                    CommandParameter="{Binding Path=.}"
                                    Margin="0 0 4 0"/>

                                <Button Content="Use Defaults"
                                    Command="{Binding ElementName=MyToolWindow, Path=DataContext.ResetToDefaultsCommand}"
                                    CommandParameter="{Binding Path=.}" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
